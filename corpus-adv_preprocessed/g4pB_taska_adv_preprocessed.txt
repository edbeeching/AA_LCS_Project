inheritance is the ability of a subclass to inherit default, protected and public attributes and methods from its superclasses. each object except java.lang.object can be cast to an object of one of its superclasses. however an object cannot be cast to a class which is no relative of it. here is an example of inheritance:
we have the class of all living things which have attributes like weight and age. we have the classes of animals, plants, viruses and fungi that are subclasses of the class of all living things. the animals have their unique attributes organs, hair, etc. and methods walking, mating, etc.. they also inherit the attributes and methods of its superclass. animals can be treated cast to living things. however, animals cannot be treated as fungi.
in object oriented programming inheritance is also dependant on access level modifiers. for example private attributes and methods cannot be inherited. virtual attributes and methods can be shadowedoverridden. in java all attributes and methods are implicitly virtual. object variable can store a reference to the same class or a subclass i.e. this or more specialised version. however, object variables cannot store references to a superclass i.e. less specialised version of the original class.

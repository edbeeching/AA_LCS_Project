dynamic programming is a problem-solving method which solves recursive problems. the term is derived from mathematical programming which is commonly referred to as optimisation, hence dynamic programming is an optimal method of solving the problems and takes much less time than na ve methods. 
dynamic programming uses the properties of optimal substructure, overlapping subproblems and memoization to create an algorithm to solve such problems. optimal substructure means that the structure of the problem is made up of sub-problems which can be used to find the solution to the problem overall. a problem with overlapping subproblems means that the same subproblems may be used to solve many different larger problems. each sub-problem is solved by being divided into sub-subproblems, until a case is reached which is solvable in constant time. memoization stores solutions which have already been computed in order to reduce unnecessary re-computation. 
dynamic programming can be divided into two main approaches: top-down and bottom-up. the top-down approach breaks the problem into subproblems, which are solved and remembered, using a combination of memoization and recursion. the bottom-up approach solves all subproblems that might be need in advance, and then uses these solutions to build up the solutions to the bigger problem. 

dynamic programming is a faster method of solving problems that make use of optimal substructure, overlapping sub problems and memoization. it has no relationship to computer programming instead it is a process of finding a satisfactory algorithm. 
optimal substructure is the process of using the optional solutions to sub problems to find the optimal solution to the overall problem. when the same sub problem solutions can be used to solve various bigger problems it is said to have overlapping sub problems. memoization is used in order to save time the solutions are stored rather than be recomputed. a solution can be disposed of once we are positive that it will no longer be required, in some cases a solution to a future problem can be computed in advance. 
there are two main approaches for dynamic programming. the first is the bottom up approach. although it is not always simple to find all of them, any required sub problems are solved in advance and then used to create solutions to larger problems. the other method is the top down approach which is a method that combines memorization and recursion. the main problem is divided into sub problems which are solved and stored for future use.

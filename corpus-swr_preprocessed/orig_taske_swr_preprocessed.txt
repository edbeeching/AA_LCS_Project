in mathematics computer science, dynamic programming method solving problems exhibit properties overlapping subproblems optimal substructure described. method takes time naive methods. the term originally 1940s richard bellman describe process solving problems find best decisions. 1953, refined modern meaning. field founded systems analysis engineering topic recognized ieee. bellmans contribution remembered the bellman equation, central result dynamic programming restates optimization problem recursive form. the word programming dynamic programming connection computer programming, term mathematical programming, synonym optimization., program optimal plan action produced. instance, finalized schedule events exhibition called program. programming, sense, finding acceptable plan action, algorithm. optimal substructure optimal solutions subproblems find optimal solutions problem. example, shortest path goal vertex graph computing shortest path goal adjacent vertices, pick best path, figure 1. general, solve problem optimal substructure three step process: break problem smaller subproblems. solve problems optimally three step process recursively. use optimal solutions construct optimal solution original problem. the subproblems,, solved dividing subproblems,, reach simple case solvable constant time. figure 2. subproblem graph fibonacci sequence. tree dag indicates overlapping subproblems. to problem overlapping subproblems subproblems solve larger problems. example, fibonacci sequence, f3 = f1 f2 f4 = f2 f3 computing number involves computing f2. f3 f4 needed compute f5, naive approach computing f5 computing f2. applies overlapping subproblems present: naive approach waste time recomputing optimal solutions subproblems solved. in order avoid, save solutions problems solved., solve problem, retrieve reuse computed solution. approach called memoization memorization, term fits. we solution, throw save space. cases, compute solutions subproblems well advance.